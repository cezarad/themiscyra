


        C: if(recv_msg!=NULL && recv_msg->round==A ){
    
           C: if(round==A && countA(mboxA,ballot) > 2*n/3){
             
                round = B;
                m = (msg *) malloc(sizeof(msg));
                m->round = round;
                m->ballot = ballot;
                send(all,m);
                
                        
                recv_msg = recv();
                if(recv_msg!=NULL && recv_msg->round==B){
                mboxB[recv_msg->ballot] = mboxB[recv_msg->ballot]  + recv_msg;
                
                
                if(round==B && countB(mboxB,ballot) > 2*n/3){
                dispose(mboxB);
                
                }
            }

            if(timeout){
            dispose(mboxB, mboxA);
            reset_timeout();
            }
            
        }

            //}

        //}
        
       



